{"version":3,"file":"static/js/488.909e1670.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_container\":\"RegisterForm_form_container__0k+ej\",\"form\":\"RegisterForm_form__Tv43W\",\"h2\":\"RegisterForm_h2__lpdeD\",\"input\":\"RegisterForm_input__FsgBz\",\"button_container\":\"RegisterForm_button_container__r6DZ7\",\"register_button\":\"RegisterForm_register_button__I4lEU\",\"login_button\":\"RegisterForm_login_button__FqQnW\"};","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, TextField } from '@mui/material';\nimport { register } from '../../redux/auth/authOperations';\nimport css from './RegisterForm.module.css';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().email('Invalid email address').required('Email is required'),\n  password: Yup.string().required('Password is required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = (e, values) => {\n    e.preventDefault();\n    console.log(values); // Form values\n    dispatch(register(values));\n  };\n\n  const handleLoginClick = () => {\n    navigate('/login');\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, handleChange, handleBlur, errors, touched }) => (\n        <Form className={css.form} autoComplete=\"off\">\n          <h2 className={css.h2}>Register</h2>\n          <TextField\n            id=\"name\"\n            name=\"name\"\n            label=\"Name\"\n            variant=\"standard\"\n            placeholder=\"Name\"\n            className={css.input}\n            type=\"text\"\n            color=\"warning\"\n            value={values.name}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={touched.name && !!errors.name}\n            helperText={touched.name && errors.name}\n            required\n          />\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            variant=\"standard\"\n            placeholder=\"Email\"\n            className={css.input}\n            type=\"email\"\n            color=\"warning\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={touched.email && !!errors.email}\n            helperText={touched.email && errors.email}\n            required\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            variant=\"standard\"\n            placeholder=\"Password\"\n            className={css.input}\n            type=\"password\"\n            color=\"warning\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={touched.password && !!errors.password}\n            helperText={touched.password && errors.password}\n            required\n          />\n          <div className={css.button_container}>\n            <Button\n              variant=\"contained\"\n              color=\"warning\"\n              type=\"submit\"\n              size=\"small\"\n              sx={{\n                borderRadius: '30px',\n                textTransform: 'capitalize',\n                padding: '6px 40px',\n                letterSpacing: '1px',\n                fontWeight: 'bold',\n                fontSize: '18px',\n              }}\n              onClick={(e) => handleSubmit(e,values)}\n            >\n              Register\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"warning\"\n              type=\"button\"\n              size=\"small\"\n              sx={{\n                borderRadius: '30px',\n                textTransform: 'capitalize',\n                padding: '6px 40px',\n                letterSpacing: '1px',\n                fontWeight: 'bold',\n                fontSize: '18px',\n              }}\n              onClick={handleLoginClick}\n            >\n              Log in\n            </Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n      <RegisterForm />\n    </HelmetProvider>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["validationSchema","Yup","shape","name","required","email","password","RegisterForm","dispatch","useDispatch","navigate","useNavigate","handleSubmit","e","values","preventDefault","console","log","register","handleLoginClick","_jsx","Formik","initialValues","onSubmit","children","_ref","handleChange","handleBlur","errors","touched","_jsxs","Form","className","css","autoComplete","TextField","id","label","variant","placeholder","type","color","value","onChange","onBlur","error","helperText","Button","size","sx","borderRadius","textTransform","padding","letterSpacing","fontWeight","fontSize","onClick","HelmetProvider","Helmet"],"sourceRoot":""}