{"version":3,"file":"static/js/268.cb16db1f.chunk.js","mappings":"iRACA,EAA0E,wBAA1E,EAAuG,sBAAvG,EAAqI,yBAArI,EAAiL,oC,SCQ3KA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaE,MAAM,yBAAyBC,SAAS,qBAC5DC,SAAUJ,EAAAA,KAAaG,SAAS,0BAGrBE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,EAAGC,GACvBD,EAAEE,iBACFC,QAAQC,IAAIH,GACZN,GAASU,EAAAA,EAAAA,IAAMJ,GACjB,EAEMK,EAAsB,WAC1BT,EAAS,YACX,EAEA,OACEU,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAElB,MAAO,GAAIE,SAAU,IACtCL,iBAAkBA,EAClBsB,SAAUX,EAAaY,SAEtB,SAAAC,GAAA,IAAGX,EAAMW,EAANX,OAAQY,EAAYD,EAAZC,aAAcC,EAAUF,EAAVE,WAAYC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAAO,OACnDC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAWC,EAAUC,aAAa,MAAKV,SAAA,EAC3CJ,EAAAA,EAAAA,KAAA,MAAIY,UAAWC,EAAOT,SAAC,YACvBJ,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CACRC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,QAAQ,WACRC,YAAY,QACZR,UAAWC,EACXQ,KAAK,QACLC,MAAM,UACNC,MAAO7B,EAAOV,MACdwC,SAAUlB,EACVmB,OAAQlB,EACRmB,MAAOjB,EAAQzB,SAAWwB,EAAOxB,MACjC2C,WAAYlB,EAAQzB,OAASwB,EAAOxB,MACpCC,UAAQ,KAEVe,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CACRC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNC,QAAQ,WACRC,YAAY,WACZR,UAAWC,EACXQ,KAAK,WACLC,MAAM,UACNC,MAAO7B,EAAOR,SACdsC,SAAUlB,EACVmB,OAAQlB,EACRmB,MAAOjB,EAAQvB,YAAcsB,EAAOtB,SACpCyC,WAAYlB,EAAQvB,UAAYsB,EAAOtB,SACvCD,UAAQ,KAEVyB,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAqBT,SAAA,EACnCJ,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CACLT,QAAQ,YACRG,MAAM,UACND,KAAK,SACLQ,KAAK,QACLC,GAAI,CACFC,aAAc,OACdC,cAAe,aACfC,QAAS,WACTC,cAAe,MACfC,WAAY,OACZC,SAAU,QAEZC,QAAS,SAAC5C,GAAC,OAAKD,EAAaC,EAAEC,EAAO,EAACU,SACxC,YAGDJ,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CACLT,QAAQ,WACRG,MAAM,UACND,KAAK,SACLQ,KAAK,QACLC,GAAI,CACFC,aAAc,OACdC,cAAe,aACfC,QAAS,WACTC,cAAe,MACfC,WAAY,OACZC,SAAU,QAEZC,QAAStC,EAAoBK,SAC9B,kBAIE,GAIf,EC/FA,EAXkB,WAChB,OACEM,EAAAA,EAAAA,MAAC4B,EAAAA,GAAc,CAAAlC,SAAA,EACbJ,EAAAA,EAAAA,KAACuC,EAAAA,GAAM,CAAAnC,UACLJ,EAAAA,EAAAA,KAAA,SAAAI,SAAO,aAETJ,EAAAA,EAAAA,KAACb,EAAS,MAGhB,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_container\":\"LoginForm_form_container__A+e3j\",\"form\":\"LoginForm_form__gPEx5\",\"h2\":\"LoginForm_h2__dNyJA\",\"input\":\"LoginForm_input__aQRtt\",\"button_container\":\"LoginForm_button_container__0rjB8\",\"login_button\":\"LoginForm_login_button__dAQX-\",\"register_button\":\"LoginForm_register_button__hjQGg\"};","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, TextField } from '@mui/material';\nimport { logIn } from '../../redux/auth/authOperations';\nimport css from './LoginForm.module.css';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Email is required'),\n  password: Yup.string().required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = (e, values) => {\n    e.preventDefault();\n    console.log(values); // Form values\n    dispatch(logIn(values));\n  };\n\n  const handleRegisterClick = () => {\n    navigate('/register');\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, handleChange, handleBlur, errors, touched }) => (\n        <Form className={css.form} autoComplete=\"off\">\n          <h2 className={css.h2}>Log In</h2>\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            variant=\"standard\"\n            placeholder=\"Email\"\n            className={css.input}\n            type=\"email\"\n            color=\"warning\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={touched.email && !!errors.email}\n            helperText={touched.email && errors.email}\n            required\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            variant=\"standard\"\n            placeholder=\"Password\"\n            className={css.input}\n            type=\"password\"\n            color=\"warning\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={touched.password && !!errors.password}\n            helperText={touched.password && errors.password}\n            required\n          />\n          <div className={css.button_container}>\n            <Button\n              variant=\"contained\"\n              color=\"warning\"\n              type=\"submit\"\n              size=\"small\"\n              sx={{\n                borderRadius: '30px',\n                textTransform: 'capitalize',\n                padding: '6px 40px',\n                letterSpacing: '1px',\n                fontWeight: 'bold',\n                fontSize: '18px',\n              }}\n              onClick={(e) => handleSubmit(e,values)}\n            >\n              Log In\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"warning\"\n              type=\"button\"\n              size=\"small\"\n              sx={{\n                borderRadius: '30px',\n                textTransform: 'capitalize',\n                padding: '6px 40px',\n                letterSpacing: '1px',\n                fontWeight: 'bold',\n                fontSize: '18px',\n              }}\n              onClick={handleRegisterClick}\n            >\n              Register\n            </Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </HelmetProvider>\n  );\n};\n\nexport default LoginPage;\n"],"names":["validationSchema","Yup","shape","email","required","password","LoginForm","dispatch","useDispatch","navigate","useNavigate","handleSubmit","e","values","preventDefault","console","log","logIn","handleRegisterClick","_jsx","Formik","initialValues","onSubmit","children","_ref","handleChange","handleBlur","errors","touched","_jsxs","Form","className","css","autoComplete","TextField","id","name","label","variant","placeholder","type","color","value","onChange","onBlur","error","helperText","Button","size","sx","borderRadius","textTransform","padding","letterSpacing","fontWeight","fontSize","onClick","HelmetProvider","Helmet"],"sourceRoot":""}